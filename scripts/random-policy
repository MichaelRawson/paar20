#!/usr/bin/env python3
import sys
sys.path.append('.')
import atp
from mcts import select_inference
import random

from pathlib import Path

EPISODE_LENGTH = 50

def random_policy(axioms, conjectures):
    axioms = axioms[:]
    conjectures = conjectures[:]
    selected = conjectures
    for _ in range(EPISODE_LENGTH):
        actions = axioms + atp.infer(selected)
        chosen = random.choice(actions)
        axioms, selected = select_inference(axioms, selected, chosen)
    return atp.score(axioms, selected)

if __name__ == '__main__':
    import sys
    path = Path(sys.argv[1])
    axioms, conjectures = atp.clausify(path)
    baseline = atp.score(axioms, conjectures)
    for _ in range(1000):
        while True:
            try:
                raw = random_policy(axioms, conjectures)
                score = raw / baseline
                print(score)
            except atp.Timeout:
                continue
            except atp.Crashed:
                continue
            except atp.ProvedIt:
                print("0.0")
            break
