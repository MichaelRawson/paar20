#!/usr/bin/env python3
import sys
sys.path.append('.')
import atp
from mcts import select_inference
import random

from pathlib import Path

EPISODE_LENGTH = 5

def random_policy(axioms, conjectures, extras):
    axioms = axioms[:]
    conjectures = conjectures[:]
    extras = extras[:]
    selected = conjectures
    for _ in range(EPISODE_LENGTH):
        inferred, extras = atp.infer(selected, extras)
        actions = axioms + inferred
        if len(actions) == 0:
            print("out of actions")
            raise atp.Crashed()
        chosen = random.choice(actions)
        print(chosen)
        axioms, selected = select_inference(axioms, selected, chosen)
    return atp.score(axioms, selected, extras)

if __name__ == '__main__':
    import sys
    path = sys.argv[1]
    axioms, conjectures, extras = atp.clausify(path)
    for _ in range(1000):
        try:
            print(random_policy(axioms, conjectures, extras))
        except atp.ProvedIt:
            print("proved it")
        except atp.Timeout:
            print("timeout")
        except atp.Crashed:
            print("crashed")
