#!/usr/bin/env python3
import sys
sys.path.append('.')
import atp
from mcts import Node
from time import monotonic

TIME_LIMIT = 3600

if __name__ == '__main__':
    from pathlib import Path
    import sys
    path = Path(sys.argv[1])
    axioms, selected, extras = atp.clausify(path)
    baseline = atp.score(axioms, selected, extras)
    root = Node(baseline, axioms, selected, extras)
    start = monotonic()
    while monotonic() - start < TIME_LIMIT:
        if root.closed:
            break
        root.step(axioms, selected)
        for child in root.children:
            print(f"{child.score:.3f}/{child.visits}", end='  ')
        print()
    save_to = Path(f"data/{path.stem}")
    save_to.mkdir(exist_ok=True)
    root.save_graphs(save_to, axioms, selected)
